name: Security Scan

on:
  schedule:
    - cron: '0 2 * * *' # Run daily at 2 AM UTC
  workflow_dispatch:
  push:
    branches: [main, develop]

jobs:
  # Container Security Scan
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest

    strategy:
      matrix:
        image: [backend, frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -f devops/docker/production/${{ matrix.image }}.Dockerfile \
            -t hotel-mapper-${{ matrix.image }}:scan \
            ./${{ matrix.image }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: hotel-mapper-${{ matrix.image }}:scan
          format: 'sarif'
          output: 'trivy-${{ matrix.image }}.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-${{ matrix.image }}.sarif'

  # Dependency Security Scan
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Run npm audit (Frontend)
        working-directory: frontend
        run: |
          if [ -f "package-lock.json" ]; then
            npm audit --json > ../npm-audit-frontend.json || true
          fi

      - name: Run npm audit (Backend)
        working-directory: backend
        run: |
          if [ -f "package-lock.json" ]; then
            npm audit --json > ../npm-audit-backend.json || true
          fi

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-results
          path: |
            npm-audit-frontend.json
            npm-audit-backend.json

  # OWASP Dependency Check
  owasp-scan:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'hotel-mapper'
          path: '.'
          format: 'HTML'
          args: >
            --enableRetired
            --enableExperimental

      - name: Upload OWASP results
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-check-report
          path: reports

  # Secret Scanning
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # CodeQL Analysis
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # Infrastructure Security Scan
  infra-scan:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: devops/
          framework: dockerfile,yaml
          output_format: sarif
          output_file_path: checkov.sarif

      - name: Upload Checkov results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: checkov.sarif

  # Security Report
  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [container-scan, dependency-scan, owasp-scan, secret-scan, codeql-analysis, infra-scan]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate consolidated report
        run: |
          echo "# Security Scan Report" > security-report.md
          echo "Date: $(date)" >> security-report.md
          echo "Repository: ${{ github.repository }}" >> security-report.md
          echo "Branch: ${{ github.ref }}" >> security-report.md
          echo "" >> security-report.md
          echo "## Scan Results Summary" >> security-report.md
          echo "- Container Scan: Complete" >> security-report.md
          echo "- Dependency Scan: Complete" >> security-report.md
          echo "- OWASP Check: Complete" >> security-report.md
          echo "- Secret Scan: Complete" >> security-report.md
          echo "- CodeQL Analysis: Complete" >> security-report.md
          echo "- Infrastructure Scan: Complete" >> security-report.md

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md

      - name: Notify team
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: 'failure'
          text: 'Security vulnerabilities detected in ${{ github.repository }}'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}